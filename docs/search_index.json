[["multivariate-statistics.html", " 6 Multivariate Statistics 6.1 Explore the Data set 6.2 ANOVA 6.3 Simple Linear Regression 6.4 Multiple Linear Regression 6.5 Exercises", " 6 Multivariate Statistics In this lesson you will be introduced to statistical tests for dealing with more complex data sets, such as when you need to compare across more than two groups (ANOVA) or assess relationships in the form of an equation to predict response variables given single or multiple predictors (Regression). First you’ll need to load in the libraries and data set for the lesson. We need to install one new package for today to use a specific statistical test. This package is called car. Follow the steps below to install the package, and then read in your libraries and data set for the lesson. #install the car package install.packages(&quot;car&quot;) #load in packages library(tidyverse) library(lterdatasampler) library(car) # data set data(&quot;pie_crab&quot;) 6.1 Explore the Data set This data set consists of Fiddler crab body size measured in salt marshes from Florida to Massachusetts during summer 2016 at Plum Island Ecosystem LTER. glimpse(pie_crab) ## Rows: 392 ## Columns: 9 ## $ date &lt;date&gt; 2016-07-24, 2016-07-24, 2016-07-24, 2016-07-24, 2016-07-24, 2016-07-24, 2016-07-24, 2016-07-24, 2016-07-24, 2016-07-2… ## $ latitude &lt;dbl&gt; 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0… ## $ site &lt;chr&gt; &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;, &quot;GTM&quot;,… ## $ size &lt;dbl&gt; 12.43, 14.18, 14.52, 12.94, 12.45, 12.99, 10.32, 11.19, 12.68, 14.55, 14.92, 13.48, 13.76, 13.10, 13.56, 13.51, 12.12,… ## $ air_temp &lt;dbl&gt; 21.792, 21.792, 21.792, 21.792, 21.792, 21.792, 21.792, 21.792, 21.792, 21.792, 21.792, 21.792, 21.792, 21.792, 21.792… ## $ air_temp_sd &lt;dbl&gt; 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391,… ## $ water_temp &lt;dbl&gt; 24.502, 24.502, 24.502, 24.502, 24.502, 24.502, 24.502, 24.502, 24.502, 24.502, 24.502, 24.502, 24.502, 24.502, 24.502… ## $ water_temp_sd &lt;dbl&gt; 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121,… ## $ name &lt;chr&gt; &quot;Guana Tolomoto Matanzas NERR&quot;, &quot;Guana Tolomoto Matanzas NERR&quot;, &quot;Guana Tolomoto Matanzas NERR&quot;, &quot;Guana Tolomoto Matanz… Learn more about each variable: ?pie_crab This data set provides a great opportunity to explore Bergmann’s rule: where organisms at higher latitudes are larger than those at lower latitudes. There are various hypotheses on what drives this phenomenon, which you can read more about in Johnson et al. 2019. We have a continuous size variable (carapace width in mm), our dependent variable, and various predictor variables: site (categorical), latitude (continuous), air temperature (continuous) and water temperature (continuous). Let’s explore the sample size at each site and how many sites are in this data set # sample size per site pie_crab %&gt;% group_by(site) %&gt;% count() ## # A tibble: 13 × 2 ## # Groups: site [13] ## site n ## &lt;chr&gt; &lt;int&gt; ## 1 BC 37 ## 2 CC 27 ## 3 CT 33 ## 4 DB 30 ## 5 GTM 28 ## 6 JC 30 ## 7 NB 29 ## 8 NIB 30 ## 9 PIE 28 ## 10 RC 25 ## 11 SI 30 ## 12 VCR 30 ## 13 ZI 35 We have 13 sites with ~30 individual male crabs measured at each site. Let’s also check the range of our continuous variables: summary(pie_crab) ## date latitude site size air_temp air_temp_sd water_temp water_temp_sd ## Min. :2016-07-24 Min. :30.00 Length:392 Min. : 6.64 Min. :10.29 Min. :6.391 Min. :13.98 Min. :4.838 ## 1st Qu.:2016-07-28 1st Qu.:34.00 Class :character 1st Qu.:12.02 1st Qu.:12.05 1st Qu.:8.110 1st Qu.:14.33 1st Qu.:6.567 ## Median :2016-08-01 Median :39.10 Mode :character Median :14.44 Median :13.93 Median :8.410 Median :17.50 Median :6.998 ## Mean :2016-08-02 Mean :37.69 Mean :14.66 Mean :15.20 Mean :8.654 Mean :17.65 Mean :7.252 ## 3rd Qu.:2016-08-09 3rd Qu.:41.60 3rd Qu.:17.34 3rd Qu.:18.63 3rd Qu.:9.483 3rd Qu.:20.54 3rd Qu.:7.865 ## Max. :2016-08-13 Max. :42.70 Max. :23.43 Max. :21.79 Max. :9.965 Max. :24.50 Max. :9.121 ## name ## Length:392 ## Class :character ## Mode :character ## ## ## 6.2 ANOVA First we can see if there is a significant difference in crab size among sites. Since we have a continuous response variable (size) and a categorical predictor (site) with &gt; 2 groups (13 sites), we will use an ANOVA test. Lets first visualize the distribution of size values for each site using a new visualization technique with ggplot called geom_jitter(). This function adds a small amount of variation to each point, so that all our points for each site are not stacked on top of each other (for example, try running the following code below but with geom_point() instead of geom_jitter() and notice the difference). In this code we also use the reorder() function to order our x axis value (site) by latitude to see any initial trends fitting Bergmann’s rule. pie_crab %&gt;% ggplot(aes(x = reorder(site, latitude), y = size, color = site)) + geom_jitter()+ # edit y axis label labs(x = &quot;&quot;, y = &quot;Carapace width (mm)&quot;)+ # remove the legend and x axis label theme(legend.position = &quot;none&quot;, axis.title.x = element_blank()) Looks like there is variation among sites, so lets test for statistical significance with the ANOVA test. 6.2.1 Assumptions Normality ANOVA assumes normal distributions within each group. Here our group sample sizes are ~30 each which can be considered as large enough to not worry about this assumption, but lets walk through how to statistically check for normality if you had smaller sample sizes. You could test for normality with the Shaprio-Wilk test for each group individually, but here we have a lot of groups (13) and that would be tedious. Instead, we can calculate the residuals for all groups and test for normal distribution on the single set of residuals. A residual value is computed for each observation as the difference between that value and the mean of all values for that group. We can get the residuals from the ANOVA model by running aov(). To carry out the ANOVA model, we specify the name of our continuous response (size) ~ the name of our categorical predictor (site), and specify the data set name. Note that the aov() function won’t work the %&gt;% pipe. res_aov &lt;- aov(size ~ site, data = pie_crab) We can then pull out the residuals of this aov() model like we do by indexing columns with the $ operator. Let’s check the distribution visually with hist() and then statistically with shapiro.test(). hist(res_aov$residuals) shapiro.test(res_aov$residuals) ## ## Shapiro-Wilk normality test ## ## data: res_aov$residuals ## W = 0.99708, p-value = 0.7122 This returns a p-value of 0.72, so we accept the null that this data does fit the normal distribution assumption. Equal Variances To test for equal variances among more than two groups, it is easiest to use a Levene’s Test. To use this test we need to install a new package called car, which you should have done at the beginning of this lesson. leveneTest(size ~ site, data = pie_crab) ## Levene&#39;s Test for Homogeneity of Variance (center = median) ## Df F value Pr(&gt;F) ## group 12 9.2268 1.151e-15 *** ## 379 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Similar to the var.test() function you’ve used before, the null hypothesis of the Levene’s test is that the variances are equal. Given this small p-value (denoted the the ‘Pr(&gt;F)’ value) we see that the variances of our groups are not equal. Therefore we would have to perform a Welch ANOVA: oneway.test(size ~ site, data = pie_crab, var.equal = FALSE) ## ## One-way analysis of means (not assuming equal variances) ## ## data: size and site ## F = 39.108, num df = 12.00, denom df = 145.79, p-value &lt; 2.2e-16 Our results here are highly significant, meaning that at least one of our groups means is significantly different from the others. Now ANOVAs don’t tell us which groups are significantly different, for that we would need to use the post-hoc Tukey’s HSD test. However for 13 groups that is a lot of pairwise comparisons to perform. For the next example lets filter our analysis to check for differences among 3 sites, choosing sites at the two extremes in latitude and one in the middle of the range. pie_sites &lt;- pie_crab %&gt;% filter(site %in% c(&quot;GTM&quot;, &quot;DB&quot;, &quot;PIE&quot;)) We already know that this data set fits the normality assumption, but now lets check if the variances of these 3 sites are equal or not. leveneTest(size ~ site, data = pie_sites) ## Levene&#39;s Test for Homogeneity of Variance (center = median) ## Df F value Pr(&gt;F) ## group 2 0.548 0.5802 ## 83 A p-value of 0.58 is much higher than our cut-off of 0.05, so we are confident that the variances are equal and we can therefore carry out the ANOVA with the aov() as we meet all its assumptions. pie_anova &lt;- aov(size ~ site, data = pie_sites) To view the ANOVA results of this model we use summary() summary(pie_anova) ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## site 2 521.5 260.75 60.02 &lt;2e-16 *** ## Residuals 83 360.6 4.34 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 6.2.2 Post-hoc Tukey’s HSD test From the ANOVA test we find that at least one of our group means is significantly different from the others. Now we can use the TukeyHSD() function to test all the pairwise differences to see which groups are different from each other. TukeyHSD(pie_anova) ## Tukey multiple comparisons of means ## 95% family-wise confidence level ## ## Fit: aov(formula = size ~ site, data = pie_sites) ## ## $site ## diff lwr upr p adj ## GTM-DB -3.200786 -4.507850 -1.893722 3.0e-07 ## PIE-DB 2.899929 1.592865 4.206992 2.9e-06 ## PIE-GTM 6.100714 4.771306 7.430123 0.0e+00 This returns each combination of site comparisons and a p-value (the ‘p adj’ variable) for each. 6.3 Simple Linear Regression Lets more directly test Bergmann’s rule by testing for a relationship between carapace width and latitude. Since our predictor (latitude) is a continuous, quantitative variable, we can conduct a simple linear regression. To conduct a regression model, we use the lm() function. pie_lm &lt;- lm(size ~ latitude, data = pie_crab) #view the results of the linear model summary(pie_lm) ## ## Call: ## lm(formula = size ~ latitude, data = pie_crab) ## ## Residuals: ## Min 1Q Median 3Q Max ## -7.8376 -1.8797 0.1144 1.9484 6.9280 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -3.62442 1.27405 -2.845 0.00468 ** ## latitude 0.48512 0.03359 14.441 &lt; 2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 2.832 on 390 degrees of freedom ## Multiple R-squared: 0.3484, Adjusted R-squared: 0.3467 ## F-statistic: 208.5 on 1 and 390 DF, p-value: &lt; 2.2e-16 Our p-value is indicated in the ‘Pr(&gt;|t|)’ column for ‘latitude’ and at the bottom of these results, telling us that latitude does have a significant effect on crab size. From the results we also have an Estimate for latitude (0.49), which reflects the regression coefficient or strength and direction of the effect of latitude, along with the standard error for that estimate (0.03), reflecting the variation in that estimate. Lets view this visually and fit the linear regression line of best fit. pie_crab %&gt;% ggplot(aes(x = latitude, y = size))+ geom_point()+ geom_smooth(method = &quot;lm&quot;) Now that we fit this model, we can use it to predict crab size at different latitudes with predict(). For example, lets predict carapace width at a latitudes of 32, 36, and 38 degrees. Note that we need to create these values as a new data frame with the same column name used in the data that the model was built of off. new_lat &lt;- data.frame(latitude = c(32, 36, 38)) predict(pie_lm, newdata = new_lat) ## 1 2 3 ## 11.89939 13.83987 14.81010 6.4 Multiple Linear Regression Say we want to model the effect of more than one predictor on crab size. In this data set we also have continuous variables for air temperature and water temperature. Lets model the effect of latitude, air and water temperature on carapace width. Running a multiple linear regression is very similar to the simple linear regression, but now we specify our multiple predictor variables by adding them together with a + sign like this: pie_mlm &lt;- lm(size ~ latitude + air_temp + water_temp, data = pie_crab) summary(pie_mlm) ## ## Call: ## lm(formula = size ~ latitude + air_temp + water_temp, data = pie_crab) ## ## Residuals: ## Min 1Q Median 3Q Max ## -8.7099 -1.7195 -0.0602 1.7823 7.7271 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 77.7460 17.3477 4.482 9.76e-06 *** ## latitude -1.0587 0.3174 -3.336 0.000933 *** ## air_temp -2.4041 0.3844 -6.255 1.05e-09 *** ## water_temp 0.7563 0.1465 5.162 3.92e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 2.677 on 388 degrees of freedom ## Multiple R-squared: 0.4206, Adjusted R-squared: 0.4161 ## F-statistic: 93.9 on 3 and 388 DF, p-value: &lt; 2.2e-16 These results show an overall p-value for the model, indicating a significant impact of the combination of predictor variables on crab size, and individual p-values for the effect of each individual predictor on crab size. Note however that normally with multiple regression, one of the assumptions is that there is no correlation between the predictor variables. We can test for correlations between more than two variables with the cor() function. Lets test for correlation between our three predictors: pie_crab %&gt;% select(latitude, air_temp, water_temp) %&gt;% cor() ## latitude air_temp water_temp ## latitude 1.0000000 -0.9949715 -0.9571738 ## air_temp -0.9949715 1.0000000 0.9632287 ## water_temp -0.9571738 0.9632287 1.0000000 Normally tests remove variables that have a correlation coefficient greater than 0.7/-0.7. These are all highly correlated (with coefficients near 1/-1), therefore probably not the best set of predictors to use for a multiple linear regression. Below in your assignment you will perform a multiple linear regression using variables that are a bit less correlated. 6.5 Exercises After completing the ANOVA test in section 6.2 to test for significant differences in crab size among sites: 1) Create a boxplot showing the carapace width for each site where sites are ordered by latitude and 2) report the findings of the statistical test as you would in a scientific paper. (6 pts.) Conduct a simple linear regression for the effect of water_temp_sd (a measure reflecting annual variation in water temperature) on carapace width. Report your findings (include code and a sentence reporting the results) AND create a plot with a line of best fit. (10 pts). Conduct a multiple linear regression for the effects of latitude, air_temp_sd, and water_temp_sd on carapace width. First check for correlations among the three predictor variables (and report the correlation table) and second report your findings from the multiple linear regression (code and a sentence reporting the results). (9 pts.) 6.5.1 Acknowledgements Thanks to the developers of lterdatasampler for providing the data set and vignettes that helped guide the creation of this lesson plan. 6.5.2 Citations Johnson, D. 2019. Fiddler crab body size in salt marshes from Florida to Massachusetts, USA at PIE and VCR LTER and NOAA NERR sites during summer 2016. ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/4c27d2e778d3325d3830a5142e3839bb (Accessed 2021-05-27). Johnson DS, Crowley C, Longmire K, Nelson J, Williams B, Wittyngham S. The fiddler crab, Minuca pugnax, follows Bergmann’s rule. Ecol Evol. 2019;00:1–9. https://doi.org/10.1002/ece3.5883 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
